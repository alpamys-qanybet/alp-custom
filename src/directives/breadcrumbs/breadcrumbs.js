// Generated by CoffeeScript 1.4.0
(function() {

  angular.module('alpCustom').directive("breadcrumbs", [
    'LIB_URL', function(LIB_URL) {
      return {
        restrict: "E",
        replace: true,
        templateUrl: function(elm, attrs) {
          if (attrs.template) {
            return LIB_URL + 'directives/breadcrumbs/breadcrumbs-' + attrs.template + '.html';
          } else {
            return attrs.templateUrl || LIB_URL + 'directives/breadcrumbs/breadcrumbs.html';
          }
        },
        scope: {
          fetch: '&',
          list: '='
        },
        controller: [
          "$scope", "$element", function($scope, $element) {
            var init;
            init = function() {
              var root;
              $scope.list = [];
              root = {
                id: 'root',
                name: 'Main'
              };
              $scope.list.push(root);
            };
            init();
            $scope.process = function(id) {
              var b, list, _i, _len, _ref;
              if (id === 'root') {
                init();
                $scope.fetch();
              } else {
                list = [];
                _ref = $scope.list;
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  b = _ref[_i];
                  list.push(b);
                  if (b.id === id) {
                    break;
                  }
                }
                $scope.list = list;
                $scope.fetch({
                  id: id
                });
              }
            };
          }
        ],
        link: function(scope, elm, attrs) {
          if (attrs.contentUrl) {
            scope.contentUrl = attrs.contentUrl;
          }
        }
      };
    }
  ]);

  angular.module('alpCustom').directive("breadcrumbsItem", [
    '$templateRequest', '$sce', '$compile', 'LIB_URL', function($templateRequest, $sce, $compile, LIB_URL) {
      return {
        restrict: "E",
        replace: true,
        templateUrl: function(elm, attrs) {
          if (attrs.template) {
            return LIB_URL + 'directives/breadcrumbs/breadcrumbs-item-' + attrs.template + '.html';
          } else {
            return attrs.itemTemplateUrl || LIB_URL + 'directives/breadcrumbs/breadcrumbs-item.html';
          }
        },
        scope: {
          item: '='
        },
        controller: ["$scope", "$element", function(scope, elm) {}],
        compile: function(cElement, cAttributes, transclude) {
          return {
            pre: function(scope, elm, attrs) {
              var replace, url;
              replace = function(selector, content) {
                var domElement;
                domElement = elm.find(selector).clone();
                domElement.html(content);
                domElement = $compile(domElement)(scope);
                elm.find(selector).replaceWith(domElement);
              };
              if (attrs.contentUrl) {
                url = $sce.getTrustedResourceUrl(attrs.contentUrl);
                $templateRequest(url).then(function(t) {
                  replace('.item-content', t);
                }, function() {
                  console.error('content url not found');
                  replace('.item-content', '{{item}}');
                });
              } else {
                replace('.item-content', '{{item}}');
              }
            },
            post: function(scope, elm, attrs) {}
          };
        }
      };
    }
  ]);

}).call(this);
