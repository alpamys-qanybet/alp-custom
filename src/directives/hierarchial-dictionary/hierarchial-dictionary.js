// Generated by CoffeeScript 1.4.0
(function() {

  angular.module('alpCustom').directive("hierarchialDictionary", [
    'LIB_URL', function(LIB_URL) {
      return {
        restrict: "E",
        replace: true,
        templateUrl: function(elm, attrs) {
          return attrs.templateUrl || LIB_URL + 'directives/hierarchial-dictionary/hierarchial-dictionary.html';
        },
        scope: {
          'fetch': '&',
          'componentModel': "="
        },
        controller: ["$scope", "$element", function($scope, $element) {}],
        link: function(scope, elm, attrs) {
          var fetch, process, select;
          scope.expression = attrs.swOptions;
          scope.path = [];
          select = function() {
            var i, node, _i, _len, _ref;
            scope.componentModel = {
              selected: null,
              full: []
            };
            _ref = scope.path;
            for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
              node = _ref[i];
              scope.componentModel.full.push(node.selected);
            }
            scope.componentModel.selected = scope.componentModel.full[scope.componentModel.full.length - 1];
          };
          process = function(data) {
            var node;
            node = {
              selected: null,
              elements: data
            };
            scope.path.push(node);
            select();
            scope.$watch(function() {
              return node.selected;
            }, function(newvalue, oldvalue) {
              var index, n, _i, _len, _ref;
              if (_.isNull(newvalue)) {
                return;
              } else {
                index = 0;
                _ref = scope.path;
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  n = _ref[_i];
                  if (n.selected.id === newvalue.id) {
                    break;
                  }
                  index++;
                }
                scope.path = scope.path.slice(0, index + 1);
                select();
                fetch(newvalue.id);
              }
            });
          };
          fetch = function(id) {
            if (id) {
              scope.fetch({
                id: id,
                fn: function(data) {
                  if (data && data.length > 0) {
                    process(data);
                  }
                }
              });
            } else {
              scope.fetch({
                id: null,
                fn: function(data) {
                  scope.path = [];
                  process(data);
                }
              });
            }
          };
          fetch();
        }
      };
    }
  ]);

}).call(this);
